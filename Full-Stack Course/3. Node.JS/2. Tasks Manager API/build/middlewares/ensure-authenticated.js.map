{"version":3,"sources":["../../src/middlewares/ensure-authenticated.ts","../../src/env.ts","../../src/config/auth.ts","../../src/utils/app-error.ts"],"sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { verify } from \"jsonwebtoken\";\n\nimport { authConfig } from \"@/config/auth\";\nimport { AppError } from \"@/utils/app-error\";\n\n\ninterface TokenPayload {\n  role: string\n  sub: string\n}\n\nexport function ensureAuthenticated(request: Request, response: Response, next: NextFunction) {\n  try {\n    const authHeader = request.headers.authorization;\n\n    if (!authHeader) {\n      throw new AppError(\"JWT token not found\", 401);\n    }\n\n    // Bearer 3i1bi3i2utbi\n    const [, token] = authHeader.split(\" \");\n\n    if (!token) {\n      throw new AppError(\"JWT token not found\", 401);\n    }\n\n    const { role, sub: userId } = verify(token, authConfig.jwt.secret) as TokenPayload;\n\n    request.user = {\n      id: userId,\n      role\n    }\n\n    return next();\n  } catch (error) {\n    throw new AppError(\"Invalid JWT token\", 401);\n  }\n}\n","import { z } from \"zod\";\n\n\nconst envSchema = z.object({\n  DATABASE_URL: z.url(),\n  JWT_SECRET: z.string()\n});\n\nexport const env = envSchema.parse(process.env);\n","import { env } from \"@/env\";\n\n\nexport const authConfig = {\n  jwt: {\n    secret: env.JWT_SECRET,\n    expiresIn: \"1d\"\n  }\n} as const;\n","export class AppError {\n  message: string;\n  statusCode: number;\n\n  constructor(message: string, statusCode: number = 400) {\n    this.message = message;\n    this.statusCode = statusCode;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAuB;;;ACDvB,iBAAkB;AAGlB,IAAM,YAAY,aAAE,OAAO;AAAA,EACzB,cAAc,aAAE,IAAI;AAAA,EACpB,YAAY,aAAE,OAAO;AACvB,CAAC;AAEM,IAAM,MAAM,UAAU,MAAM,QAAQ,GAAG;;;ACLvC,IAAM,aAAa;AAAA,EACxB,KAAK;AAAA,IACH,QAAQ,IAAI;AAAA,IACZ,WAAW;AAAA,EACb;AACF;;;ACRO,IAAM,WAAN,MAAe;AAAA,EACpB;AAAA,EACA;AAAA,EAEA,YAAY,SAAiB,aAAqB,KAAK;AACrD,SAAK,UAAU;AACf,SAAK,aAAa;AAAA,EACpB;AACF;;;AHIO,SAAS,oBAAoB,SAAkB,UAAoB,MAAoB;AAC5F,MAAI;AACF,UAAM,aAAa,QAAQ,QAAQ;AAEnC,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,SAAS,uBAAuB,GAAG;AAAA,IAC/C;AAGA,UAAM,CAAC,EAAE,KAAK,IAAI,WAAW,MAAM,GAAG;AAEtC,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,SAAS,uBAAuB,GAAG;AAAA,IAC/C;AAEA,UAAM,EAAE,MAAM,KAAK,OAAO,QAAI,4BAAO,OAAO,WAAW,IAAI,MAAM;AAEjE,YAAQ,OAAO;AAAA,MACb,IAAI;AAAA,MACJ;AAAA,IACF;AAEA,WAAO,KAAK;AAAA,EACd,SAAS,OAAO;AACd,UAAM,IAAI,SAAS,qBAAqB,GAAG;AAAA,EAC7C;AACF;","names":[]}